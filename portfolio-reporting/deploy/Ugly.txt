<!DOCTYPE html>
<html>
<head>
    <title>Portfolio Reporting App</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Fri Feb 10 2017 16:59:44 GMT-0800 (PST) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Fri Feb 10 2017 16:59:44 GMT-0800 (PST)";
        var STORY    = "US";
        var BUILDER  = "arajaraman";
        var CHECKSUM = 3968981889;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("TSApp",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",layout:{type:"hbox"}},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"TSApp"},selectedPILevel:["PortfolioItem/Initiative"],modelNames:["PortfolioItem","HierarchicalRequirement","Task"],launch:function(){var a=this;console.log(a._getSelectedColumns()),a.down("#message_box").add([{name:"selectorType",itemId:"selectorType",fieldLabel:"Select PI: ",width:250,margin:"10 10 10 10",xtype:"rallyportfolioitemtypecombobox",valueField:"TypePath",readyEvent:"ready",listeners:{load:a._updateGrid,scope:a}},{xtype:"rallyfieldpicker",name:"columnNames",itemId:"columnNames",fieldLabel:"Choose Fields",width:250,margin:"10 10 10 10",autoExpand:!1,alwaysExpanded:!1,modelTypes:a.modelNames,alwaysSelectedValues:a._getSelectedColumns(),fieldBlackList:["Attachments","Children"]},{xtype:"rallybutton",text:"Update",margin:"10 10 10 10",cls:"primary",listeners:{click:a._updateGrid,scope:a}}])},getValue:function(){var a={};return Ext.Array.each(Ext.ComponentQuery.query("rallyfieldpicker",this),function(b){var c=b.getValue();a[b._key]=Ext.Array.map(c,function(a){return a.get("name")})}),Ext.JSON.encode(a)},_updateGrid:function(){var a=this;a.selectedPILevel=[a.down("#selectorType").getValue()],console.log(a.down("#selectorType").getValue()),a.setLoading("Loading Grid..."),Deft.Promise.all([a._getStories(),a._getPIs()],a).then({success:function(b){a.totalPlanEstimate=0,a.totalTaskEstimate=0,a.totalTaskTimeSpent=0,a.totalAcceptedLeafStoryPlanEstimateTotal=0;var c=[];Ext.Array.each(b[0],function(b){a.totalPlanEstimate+=b.get("PlanEstimate"),c.push({property:"WorkProduct.ObjectID",value:b.get("ObjectID")})}),Ext.Array.each(b[1],function(b){a.totalAcceptedLeafStoryPlanEstimateTotal+=b.get("AcceptedLeafStoryPlanEstimateTotal")}),a._getTasks(c).then({success:function(b){Ext.Array.each(b,function(b){a.totalTaskEstimate+=b.get("Estimate"),a.totalTaskTimeSpent+=b.get("TimeSpent")&&b.get("TimeSpent")>0?b.get("TimeSpent"):0}),Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:a.selectedPILevel,autoLoad:!0,enableHierarchy:!0,limit:"Infinity",rootVisible:!0}).then({success:a._addGridBoard,scope:a})},scope:a})},scope:a})},_getPIs:function(){var a=this,b={model:a.selectedPILevel[0],fetch:["ObjectID","AcceptedLeafStoryPlanEstimateTotal"],limit:"Infinity",compact:!1};return a._loadWsapiRecords(b)},_getStories:function(){var a=this,b={model:"HierarchicalRequirement",fetch:["ObjectID","PlanEstimate","Feature","Parent","AcceptedLeafStoryPlanEstimateTotal"],filters:[{property:"Feature.Parent.Parent.ObjectID",operator:">",value:0}],limit:"Infinity",compact:!1};return a._loadWsapiRecords(b)},_getTasks:function(a){var b=this,c={model:"Task",fetch:["ObjectID","PlanEstimate","Feature","Parent","ObjectID","WorkProduct","Estimate","TimeSpent"],filters:Rally.data.wsapi.Filter.or(a),limit:"Infinity",compact:!1,enablePostGet:!0};return b._loadWsapiRecords(c)},_loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c=this,d={model:"Defect",fetch:["ObjectID"]};return this.logger.log("Starting load:",a.model),Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(d,a)).load({callback:function(a,d,e){e?b.resolve(a):(c.logger.log("Failed: ",d),b.reject("Problem loading: "+d.error.errors.join(". ")))}}),b.promise},_loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred"),d=this;return this.logger.log("Starting load:",a,b),Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,e){e?c.resolve(this):(d.logger.log("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise},_displayGrid:function(a,b){this.down("#display_box").add({xtype:"rallygrid",store:a,columnCfgs:b})},_addGridBoard:function(a){var b=this;console.log("Tree store",a),console.log("columns ",b.getValue()),b.down("#display_box").removeAll(),b.down("#display_box").add({xtype:"rallytreegrid",context:this.getContext(),store:a,enableSummaryRow:!0,columnCfgs:b._getColumnCfgs(),height:this.getHeight()}),b.setLoading(!1)},_getGridBoardPlugins:function(){var a=this,b=[{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{modelNames:a.selectedPILevel,inlineFilterPanelConfig:{collapsed:!1,quickFilterPanelConfig:{fieldNames:["Owner","ScheduleState"]}}}}];return b},_getColumnCfgs:function(){var a=this;return console.log("rallyfieldcombobox>>",a.down("#message_box").query("rallyfieldpicker")),[{dataIndex:"Name",text:"Name"},{dataIndex:"ScheduleState",text:"Schedule State"},{dataIndex:"Owner",text:"Owner"},{dataIndex:"PlanEstimate",text:"Plan Estimate <br/><b>"+a.totalPlanEstimate+"</b>",summaryType:"sum",summaryRenderer:function(){return"<b>"+a.totalPlanEstimate+"</b>"}},{dataIndex:"Estimate",text:"Task Estimate",summaryType:"sum",summaryRenderer:function(){return"<b>"+a.totalTaskEstimate+"</b>"}},{dataIndex:"TimeSpent",text:"Task Time Spent",summaryType:"sum",summaryRenderer:function(){return"<b>"+a.totalTaskTimeSpent+"</b>"}},{dataIndex:"AcceptedLeafStoryPlanEstimateTotal",text:"Accepted LeafStory Plan Estimate Total",summaryType:"sum",summaryRenderer:function(){return"<b>"+a.totalAcceptedLeafStoryPlanEstimateTotal+"</b>"}}]},_getSelectedColumns:function(){var a=this,b=[];return Ext.Array.each(a._getColumnCfgs(),function(a){b.push(a.dataIndex)}),b},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('TSApp', {
                   name: 'Portfolio Reporting App'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>