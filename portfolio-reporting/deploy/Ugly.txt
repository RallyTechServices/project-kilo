<!DOCTYPE html>
<html>
<head>
    <title>Portfolio Reporting App</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Thu Mar 23 2017 09:20:02 GMT-0700 (PDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Mar 23 2017 09:20:02 GMT-0700 (PDT)";
        var STORY    = "F182";
        var BUILDER  = "rajan08";
        var CHECKSUM = 5956340125;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.override(Rally.data.wsapi.TreeStore,{_decorateModels:function(){var a=this.model;_.isFunction(a.getArtifactComponentModels)&&(a=a.getArtifactComponentModels()),Ext.Array.each(a,function(a){-1!=a.typePath.indexOf("portfolioitem/")&&(a.addField({name:"PlanEstimate",type:"auto",defaultValue:null,modelType:a.typePath}),a.addField({name:"Estimate",type:"auto",defaultValue:null,modelType:a.typePath}),a.addField({name:"TimeSpent",type:"auto",defaultValue:null,modelType:a.typePath})),-1!=a.typePath.indexOf("hierarchicalrequirement")&&(a.addField({name:"Estimate",type:"auto",defaultValue:null,modelType:a.typePath}),a.addField({name:"TimeSpent",type:"auto",defaultValue:null,modelType:a.typePath}))}),_.each(Ext.Array.from(a),Rally.ui.grid.data.NodeInterface.decorate,Rally.ui.grid.data.NodeInterface)}}),Ext.define("TSApp",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"top_box",layout:{type:"hbox"},items:[{xtype:"container",itemId:"message_box",layout:{type:"hbox"}},{xtype:"container",itemId:"totals_box",layout:{type:"hbox",align:"right"}}]},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"TSApp"},selectedPILevel:null,launch:function(){var a=this;a._addSelector()},_addSelector:function(){var a=this;a.down("#message_box").add([{name:"selectorType",itemId:"selectorType",stateful:!0,stateId:a.getContext().getScopedStateId("selectorType"),fieldLabel:"Select PI Type:",width:450,labelWidth:100,margin:"10 10 10 10",xtype:"rallyportfolioitemtypecombobox",valueField:"TypePath",readyEvent:"ready"},{xtype:"rallybutton",text:"Go",margin:"10 10 10 10",cls:"primary",listeners:{click:a.updateView,scope:a}}])},_getSelectedPIs:function(a){var b=this,c={model:a,fetch:["ObjectID","AcceptedLeafStoryPlanEstimateTotal","LeafStoryPlanEstimateTotal"],limit:"Infinity"};return b._loadWsapiRecords(c)},_getTasks:function(a){var b=this,c={model:"Task",fetch:["ObjectID","TimeSpent","Estimate"],filters:Rally.data.wsapi.Filter.or(a),limit:"Infinity",enablePostGet:!0};return b._loadWsapiRecords(c)},updateView:function(){var a=this;if(a.down("#selectorType")){a.selectedPILevel=[a.down("#selectorType").value];var b=[];a.totalTaskEstimate=0,a.totalTaskTimeSpent=0,a.totalLeafStoryPlanEstimateTotal=0,a.totalAcceptedLeafStoryPlanEstimateTotal=0,a._getSelectedPIs(a.selectedPILevel[0]).then({success:function(c){Ext.Array.each(c,function(c){b.push(c.get("ObjectID")),a.totalLeafStoryPlanEstimateTotal+=c.get("LeafStoryPlanEstimateTotal")||0,a.totalAcceptedLeafStoryPlanEstimateTotal+=c.get("AcceptedLeafStoryPlanEstimateTotal")||0}),a._getTasksFromSnapShotStore(b).then({success:function(b){a.totalTaskEstimate=0,a.lb_task_results=b[1],Ext.Array.each(b[1],function(b){a.totalTaskEstimate+=b.get("Estimate")||0});var c=[];Ext.Array.each(b[1],function(a){c.push({property:"WorkProduct.ObjectID",value:a.get("_ItemHierarchy")[a.get("_ItemHierarchy").length-2]})}),a._getTasks(c).then({success:function(b){a.totalTaskTimeSpent=0,a.taskTimeSpent={},Ext.Array.each(b,function(b){a.totalTaskTimeSpent+=b.get("TimeSpent")||0,a.taskTimeSpent[b.get("ObjectID")]=b.get("TimeSpent")||0}),Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:a.selectedPILevel,enableHierarchy:!0}).then({success:a._addGrid,scope:a})},scope:a})},scope:a})},scope:a})}},_updateAssociatedData:function(a,b,c,d){var e=this;Ext.Array.each(c,function(a){var b=0,c=0;Ext.Array.each(e.lb_task_results,function(d){Ext.Array.contains(d.get("_ItemHierarchy"),a.get("ObjectID"))&&(b+=d.get("Estimate")||0,c+=e.taskTimeSpent[d.get("ObjectID")])}),a.set("Estimate",Ext.Number.toFixed(b,2)),a.set("TimeSpent",Ext.Number.toFixed(c,2))})},_getTasksFromSnapShotStore:function(a){var b=Ext.create("Deft.Deferred"),c={_TypeHierarchy:"Task",_ItemHierarchy:{$in:a}};c.__At="current";var d=Ext.create("Rally.data.lookback.SnapshotStore",{fetch:["ObjectID","Estimate","TimeSpent","_ItemHierarchy"],find:c,useHttpPost:!0});return d.load({callback:function(c,d){b.resolve([a,c])},scope:this}),b},showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c=this,d={model:"Defect",fetch:["ObjectID"]};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(d,a)).load({callback:function(a,d,e){e?b.resolve(a):(c.logger.log("Failed: ",d),b.reject("Problem loading: "+d.error.errors.join(". ")))}}),b.promise},_loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred"),d=this;return this.logger.log("Starting load:",a,b),Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,e){e?c.resolve(this):(d.logger.log("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise},_addTotals:function(){var a=this;a.down("#totals_box").removeAll(),Ext.create("Ext.data.Store",{storeId:"totalStore",fields:["TotalTaskEstimate","TotalTimeSpent","LeafStoryPlanEstimateTotal","AcceptedLeafStoryPlanEstimateTotal"],data:{items:[{TotalTaskEstimate:Ext.Number.toFixed(a.totalTaskEstimate,2)+" Hours",TotalTimeSpent:Ext.Number.toFixed(a.totalTaskTimeSpent,2)+" Hours",LeafStoryPlanEstimateTotal:Ext.Number.toFixed(a.totalLeafStoryPlanEstimateTotal,0),AcceptedLeafStoryPlanEstimateTotal:Ext.Number.toFixed(a.totalAcceptedLeafStoryPlanEstimateTotal,0)}]},proxy:{type:"memory",reader:{type:"json",root:"items"}}}),a.down("#totals_box").add({xtype:"grid",title:"Totals",header:{style:{background:"grey",color:"white","font-weight":"bold"}},store:Ext.data.StoreManager.lookup("totalStore"),columns:[{text:"Total Task Estimate",dataIndex:"TotalTaskEstimate",flex:2},{text:"Total Time Spent",dataIndex:"TotalTimeSpent",flex:2},{text:"Leaf Story PlanEstimate Total",dataIndex:"LeafStoryPlanEstimateTotal",flex:2},{text:"Accepted Leaf Story PlanEstimate Total",dataIndex:"AcceptedLeafStoryPlanEstimateTotal",flex:2}],width:600})},_addGrid:function(a){var b=this,c=b.getContext();a.on("load",b._updateAssociatedData,b),b.down("#display_box").removeAll(),b._addTotals(),b.down("#display_box").add({itemId:"pigridboard",xtype:"rallygridboard",context:c,modelNames:b.selectedPILevel,toggleState:"grid",stateful:!1,plugins:b._getPlugins(),gridConfig:{store:a,enableEditing:!1,columnCfgs:b._getColumnCfgs()},height:b.getHeight()}),b.setLoading(!1)},_getPlugins:function(){var a=this;models=a.selectedPILevel;var b=[{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:a.getContext().getScopedStateId("filters"),modelNames:models,inlineFilterPanelConfig:{collapsed:!1,quickFilterPanelConfig:{defaultFields:["ArtifactSearch","Owner"]}}}}];return b.push({ptype:"rallygridboardfieldpicker",headerPosition:"left",modelNames:models,stateful:!0,stateId:a.getContext().getScopedStateId("field-picker")}),b},_getColumnCfgs:function(){return[{dataIndex:"Name",text:"Name"},{dataIndex:"ScheduleState",text:"Schedule State"},{dataIndex:"Owner",text:"Owner"},{dataIndex:"Estimate",text:"Task Estimate"},{dataIndex:"TimeSpent",text:"Task Time Spent"},{dataIndex:"LeafStoryPlanEstimateTotal",text:"LeafStory Plan Estimate Total"},{dataIndex:"PlanEstimate",text:"Plan Estimate"},{dataIndex:"AcceptedLeafStoryPlanEstimateTotal",text:"Accepted LeafStory Plan Estimate Total"}]},_export:function(){var a=this.down("rallytreegrid");a&&(this.logger.log("_export",a),window.location=Rally.ui.gridboard.Export.buildCsvExportUrl(a))},_getSelectedColumns:function(){var a=this,b=[];return Ext.Array.each(a._getColumnCfgs(),function(a){b.push(a.dataIndex)}),b},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('TSApp', {
                   name: 'Portfolio Reporting App'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>