<!DOCTYPE html>
<html>
<head>
    <title>CATS-Release Planning with Options-0.1</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Wed Sep 12 2018 16:48:07 GMT-0700 (PDT) -->

    <script type="text/javascript">
        var APP_BUILD_DATE = "Wed Sep 12 2018 16:48:07 GMT-0700 (PDT)";
        var ARTIFACT = "US2832";
        var BUILDER  = "rajan08";
        var CHECKSUM = 4840346310;
    </script>

    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns)
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->


    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,showLog:!1,logger:null,items:[{xtype:"container",itemId:"information"},{xtype:"container",itemId:"button_box"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}this.showLog&&this.logger&&this.down("#button_box").add({xtype:"rallybutton",text:"Show Log",listeners:{scope:this,click:function(){this.logger.displayLog()}}}),a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,dock:"bottom"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);ARTIFACT&&(a=a+"<br/>Source artifact: "+ARTIFACT),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"top",html:a})}}}),Ext.define("CArABU.technicalservices.Logger",{saveForLater:!1,saveLines:100,logArray:[],constructor:function(a){Ext.apply(this,a)},setSaveForLater:function(a){this.saveForLater=a},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),this.saveForLater&&(this.logArray||(this.logArray=[]),this.logArray.push(c.join(" ")),this.logArray.length>this.saveLines&&this.logArray.shift()),window.console&&console.log.apply(console,c)},getLogText:function(){return this.logArray&&0!==this.logArray.length?this.logArray.join("<br/>"):"-- no log --"},displayLog:function(){var a=this.getLogText();this.popup=Ext.create("Rally.ui.dialog.Dialog",{width:Ext.getBody().getWidth()-20,height:Ext.getBody().getHeight()-20,closable:!0,title:"Log",autoShow:!0,layout:"border",defaults:{layout:"fit",width:"50%",border:!1},items:[{region:"center",xtype:"container",html:a,autoScroll:!0}]})}}),Ext.define("TSUtilities",{singleton:!0,loadWsapiRecords:function(a){var b=Ext.create("Deft.Deferred"),c={model:"Defect",fetch:["ObjectID"]};return Ext.create("Rally.data.wsapi.Store",Ext.Object.merge(c,a)).load({callback:function(a,c,d){d?b.resolve(a):(console.error("Failed: ",c),b.reject("Problem loading: "+c.error.errors.join(". ")))}}),b.promise},loadAStoreWithAPromise:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:b}).load({callback:function(a,b,d){d?c.resolve(this):(console.error("Failed: ",b),c.reject("Problem loading: "+b.error.errors.join(". ")))}}),c.promise}}),Ext.override(Rally.ui.gridboard.planning.TimeboxColumnProgressBar,{initComponent:function(){var a=this._getColumn().getStore();this.store=a.clone(),this.store.sorters=new Ext.util.MixedCollection,"RefinedEstimate"==this.pointField?(this.store.fetch="RefinedEstimate",this.store.filters=a.filters.clone(),this.store.pageSize=2e3,this.store.limit=1/0):(this.store.fetch=["sum:["+this.pointField+"]"],this.store.filters=a.filters.clone(),this.store.pageSize=1)},_getTotalPointCount:function(){var a=0;if("RefinedEstimate"==this.pointField)Ext.Array.each(this.store.getRecords(),function(b){a+=b.get("RefinedEstimate")||0});else{var b=this.store.getSums();a=b[this.pointField]}return a||0}}),Ext.define("CArABU.app.TSApp",{extend:"Rally.app.App",componentCls:"app",logger:new CArABU.technicalservices.Logger,defaults:{margin:10},estimateValues:[{val:"LeafStoryPlanEstimateTotal",name:"Leaf Story Plan Estimate"},{val:"PreliminaryEstimateValue",name:"Preliminary Estimate"},{val:"RefinedEstimate",name:"Refined Estimate"}],integrationHeaders:{name:"CArABU.app.TSApp"},launch:function(){var a=this;console.log("Launching"),Rally.ui.notify.Notifier.hide(),Rally.data.util.PortfolioItemHelper.loadTypeOrDefault({defaultToLowest:!0,requester:this,success:function(b){this.piTypePath=b.get("TypePath"),this.add({xtype:"container",html:"Estimate Type: "+_.find(a.estimateValues,{val:a.getSetting("estimateType")}).name}),this._buildGridBoard()},scope:this})},config:{defaultSettings:{estimateType:"PreliminaryEstimateValue"}},_buildGridBoard:function(){var a=this,b=this.getContext();this.gridboard=this.add({xtype:"rallytimeboxgridboard",cardBoardConfig:{columnConfig:{columnStatusConfig:{pointField:a.getSetting("estimateType")},fields:this._getDefaultFields()},listeners:{filter:this._onBoardFilter,filtercomplete:this._onBoardFilterComplete,scope:this}},context:b,endDateField:"ReleaseDate",modelNames:this._getModelNames(),plugins:this._getPlugins(),startDateField:"ReleaseStartDate",timeboxType:"Release"})},_getDefaultFields:function(){return["Discussion","PreliminaryEstimate","UserStories","Milestones"]},_getModelNames:function(){return[this.piTypePath]},_onBoardFilter:function(){this.setLoading(!0)},_onBoardFilterComplete:function(){this.setLoading(!1)},_getPlugins:function(){var a=this.getContext(),b=[];return[{ptype:"rallygridboardaddnew",rankScope:"BACKLOG",addNewControlConfig:{stateful:!0,stateId:a.getScopedStateId("release-planning-add-new")}},this._getCustomFilterControlPluginConfig(),{ptype:"rallygridboardfieldpicker",boardFieldBlackList:b,headerPosition:"left"},this._getSharedViewPluginConfig()]},_getCustomFilterControlPluginConfig:function(){var a=this.getContext(),b=["PortfolioItemType","Release","ModelType"],c=["Milestones","Tags"];return{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:a.getScopedStateId("release-planning-inline-filter"),legacyStateIds:[a.getScopedStateId("release-planning-owner-filter"),a.getScopedStateId("release-planning-custom-filter-button")],filterChildren:!1,modelNames:this._getModelNames(),inlineFilterPanelConfig:{quickFilterPanelConfig:{defaultFields:["ArtifactSearch","Owner","Parent"],addQuickFilterConfig:{blackListFields:b,whiteListFields:c}},advancedFilterPanelConfig:{advancedFilterRowsConfig:{propertyFieldConfig:{blackListFields:b,whiteListFields:c}}}}}}},_getSharedViewPluginConfig:function(){var a=this.getContext();return{ptype:"rallygridboardsharedviewcontrol",sharedViewConfig:{stateful:!0,stateId:a.getScopedStateId("release-planning-shared-view"),defaultViews:_.map(this._getDefaultViews(),function(a){return Ext.apply(a,{Value:Ext.JSON.encode(a.Value,!0)}),a},this),enableUrlSharing:this.isFullPageApp!==!1}}},_getDefaultViews:function(){return[{Name:"Default View",identifier:1,Value:{toggleState:"board",fields:this._getDefaultFields()}}]},_displayGridGivenStore:function(a,b){this.down("#grid_box1").add({xtype:"rallygrid",store:a,columnCfgs:b})},_displayGridGivenRecords:function(a,b){var c=Ext.create("Rally.data.custom.Store",{data:a}),d=Ext.Array.map(b,function(a){return{dataIndex:a,text:a,flex:1}});this.down("#grid_box2").add({xtype:"rallygrid",store:c,columnCfgs:d})},getSettingsFields:function(){var a=this,b=Ext.create("Ext.data.Store",{fields:["val","name"],data:a.estimateValues}),c="5 0 5 0";return[{name:"estimateType",xtype:"combobox",fieldLabel:"Choose Estimate Type",store:b,queryMode:"local",displayField:"name",valueField:"val",width:400,labelWidth:200,margin:c},{name:"saveLog",xtype:"rallycheckboxfield",boxLabelAlign:"after",fieldLabel:"",margin:c,boxLabel:'Save Logging<br/><span style="color:#999999;"><i>Save last 100 lines of log for debugging.</i></span>'}]},getOptions:function(){var a=[{text:"About...",handler:this._launchInfo,scope:this}];return a},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{showLog:this.getSetting("saveLog"),logger:this.logger})},isExternal:function(){return"undefined"==typeof this.getAppId()}});

               Rally.launchApp('CArABU.app.TSApp', {
                   name: 'Release Planning with Options'
               });
        });
    </script>

    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>